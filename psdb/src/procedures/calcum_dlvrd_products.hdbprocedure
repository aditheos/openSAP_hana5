PROCEDURE "calcum_dlvrd_products" ( 
	IN IT_PRODUCTS TABLE( PRODUCTID NVARCHAR(10),
		                  DELIVERYDATE DAYDATE,
		                  DLVRD_PRODS_NUM BIGINT ),
	
	OUT ET_PRODUCTS TABLE( PRODUCTID NVARCHAR(10),
		                   DELIVERYDATE DAYDATE,
		                   DLVRD_PRODS_NUM BIGINT,
		                   DLVRD_PRODS_SUM BIGINT )
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   READS SQL DATA AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
  DECLARE PRODUCTID NVARCHAR(10) ARRAY;
  DECLARE DELIVERYDATE DAYDATE ARRAY;
  DECLARE DLVRD_PRODS_NUM BIGINT ARRAY;
  DECLARE DLVRD_PRODS_SUM BIGINT ARRAY;
  
  DECLARE tmp_prod NVARCHAR(10);
  DECLARE tmp_cuml BIGINT;
  DECLARE i INTEGER;
  
  tmp_prod = '';
  tmp_cuml = 0;
  i = 1;
  
  PRODUCTID = ARRAY_AGG( :IT_PRODUCTS.PRODUCTID );
  DELIVERYDATE = ARRAY_AGG( :IT_PRODUCTS.DELIVERYDATE );
  DLVRD_PRODS_NUM = ARRAY_AGG( :IT_PRODUCTS.DLVRD_PRODS_NUM );

  ET_PRODUCTS = SELECT prods.* ,
				   NULL AS DLVRD_PRODS_SUM
				   FROM :IT_PRODUCTS AS prods;
				   
  FOR i IN 1..CARDINALITY(:PRODUCTID) DO
	IF :tmp_prod <> :PRODUCTID[:i] THEN
		tmp_prod = :PRODUCTID[:i];
		DLVRD_PRODS_SUM[:i] = :DLVRD_PRODS_NUM[:i];
	ELSE
		DLVRD_PRODS_SUM[:i] = :DLVRD_PRODS_SUM[:i-1] + :DLVRD_PRODS_NUM[:i];
	END IF;
  END FOR;

  ET_PRODUCTS = UNNEST(:PRODUCTID,:DELIVERYDATE,:DLVRD_PRODS_NUM,:DLVRD_PRODS_SUM)	
                     AS(PRODUCTID,DELIVERYDATE,DLVRD_PRODS_NUM,DLVRD_PRODS_SUM);
END